---
description: XM Cloud Starter repository context and constraints
alwaysApply: true
globs: []
---

# Project Context

## Repository Overview

This is the **XM Cloud Front End Application Starter Kits** repository containing multiple Next.js starter applications and SPA examples for Sitecore XM Cloud development.

Repository Structure:
- `/examples/` - Contains starter front-end applications (Next.js and SPA)
- `/authoring/` - Sitecore content items, templates, and deployment configurations  
- `/local-containers/` - Docker setup for local development environments
- `xmcloud.build.json` - Primary configuration for XM Cloud deployment

## Starter Applications

Available Examples:
- `basic-nextjs` - Simple Next.js starter with basic XM Cloud integration
- `kit-nextjs-article-starter` - **Solterra & Co.** - Editorial-style template for lifestyle brands
- `kit-nextjs-location-finder` - **Alaris** - Car brand template with location finder functionality
- `kit-nextjs-product-listing` - **SYNC** - Product-focused template for audio gear companies
- `kit-nextjs-skate-park` - Simple demo site showcasing component examples
- `basic-spa` - SPA starter kit with Angular and Node proxy

Each starter demonstrates:
- Tailwind-based styling with Shadcn/ui components
- Personalized homepage via URL parameters
- Modular component architecture with variants
- Localization support for English (en) and Canadian English (en-CA)

## Technology Stack

Core Technologies:
- **Next.js 14+** - React framework with App Router and Pages Router support
- **TypeScript** - Strict type safety throughout all components
- **Sitecore XM Cloud** - Headless content management and delivery
- **Sitecore Content SDK** - Modern SDK for XM Cloud integration
- **Tailwind CSS** - Utility-first CSS with container queries (@container)
- **Shadcn/ui** - Modern component library with accessibility features

Additional Libraries:
- **Framer Motion** - Animation library for interactive components
- **Lucide React** - Icon library for consistent iconography  
- **next-localization** - Internationalization with dictionary support
- **change-case** - String case transformation utilities

Development Tools:
- **Docker** - Containerized local development with Sitecore CM
- **Node.js LTS** - JavaScript runtime environment
- **npm** - Package management across all starter applications

## Development Principles

Multi-Starter Architecture:
- Each example is a standalone application
- Shared patterns and conventions across all starters
- Independent deployment and development workflows
- Common XM Cloud integration patterns

Content-First Development:
- Components are designed around Sitecore data structures
- Field-driven rendering with proper fallbacks
- Support for both connected and disconnected development modes
- Proper handling of content authoring scenarios

## Constraints and Guidelines

File Organization:
- Each starter maintains its own `src/` directory structure
- Shared utilities should be copied, not shared (no monorepo linking)
- Configuration files specific to each starter application
- Independent package.json for each example

Development Workflow:
- All pull requests target the `dev` branch (three-branch workflow: dev → staging → main)
- Each starter can be developed independently in its own directory
- Copy `.env.remote.example` to `.env.local` for local development
- Required environment variables: `SITECORE_EDGE_CONTEXT_ID`, `NEXT_PUBLIC_DEFAULT_SITE_NAME`, `SITECORE_EDITING_SECRET`
- Docker containers available for full local Sitecore development stack

Local Development Setup:
```bash
# Navigate to any starter
cd examples/kit-nextjs-article-starter

# Copy environment template
cp .env.remote.example .env.local

# Edit .env.local with your XM Cloud values
# Install dependencies and start
npm install
npm run dev
```

Deployment:
- Uses `xmcloud.build.json` for rendering host configuration
- Each starter can be enabled/disabled for deployment via `enabled` flag
- Supports multiple rendering hosts in single repository
- Automatic editing host creation when split deployment is disabled
- Environment-specific configuration through XM Cloud Deploy Portal

Referenced:
@examples/
@xmcloud.build.json
@authoring/
@local-containers/